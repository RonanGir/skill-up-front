// ------------------------------
//  BUTTON MIXIN
// ------------------------------
@mixin btn {
	// Foreach Loop
	// Using the Color Variations in _variables.scss
	@each $class-key-name, $color-of-keys-value in $buttons-type {
		$bgcolor: nth($color-of-keys-value, 1);
		$fontcolor: nth($color-of-keys-value, 2);

		//use the class from the key-name
		&__#{$class-key-name} {
			background-color: $bgcolor;
			color: $fontcolor;

			// general Button Styles
			border-radius: $buttons-border-radius;
			transition: $buttons-transition;
			display: inline-block;
			vertical-align: middle;
			text-align: center;
			border: 1px solid $transparent;
			margin: 0 20px 10px 0;
			padding: 10px 30px;
			text-decoration: none;
			font-family: $font-secondary;
			font-weight: 700;
			min-width: 160px;
			min-height: 20px;
			letter-spacing: 2px;

			&:hover,
			&:focus {
				// @each $result in map-get-next($buttons-type, $class-key-name, $fallback: false, $return: value ){
				// 	$list : split-str($result, ',');
				// 	$r-1  : nth($list, 1);
				// 	$r-2  : nth($list, 2);

				// 	background-color: $r-1;
				// 	color: $r-2;
				// }

				// Calling the first value of the function map-get-next's result
				// this function using the same class name whith &--hover's values
				background-color: nth( map-get-next($buttons-type, $class-key-name, $fallback: false, $return: value ), 1);
				//color: str-index(map-get-next($buttons-type, $class-key-name, $fallback: false, $return: value ), $substring: "s");
				color: quote(map-get-next($buttons-type, $class-key-name, $fallback: false, $return: value ));
			}
		}

		
	}

}

