// ------------------------------
//  Mixin for buttons
// ------------------------------
@mixin button {
	// For each button:
	@each $class-key-name, $color-of-keys-value in $buttons-type {
   
		// Declare the variables to match the key values
		$bgcolor: nth($color-of-keys-value, 1); //nth(), is a SASS function to get the read the value from its index in the key array
		$fontcolor: nth($color-of-keys-value, 2);
		$bordercolor: nth($color-of-keys-value, 3);
		$bgcolor-hover: nth($color-of-keys-value, 4);
		$fontcolor-hover: nth($color-of-keys-value, 5);
		$bordercolor-hover: nth($color-of-keys-value, 6);

		//use the class from the map key-name to match to class name into the index
		&__#{$class-key-name} {
			background-color: $bgcolor;
			color: $fontcolor;
			border: 0.2rem solid $bordercolor;

			// Basic button styles
			border-radius: $buttons-border-radius;
			transition: $buttons-transition;
			display: inline-block;
			vertical-align: middle;
			text-align: center;
			margin: 0 2rem 1rem 0;
			padding: 1rem 3rem;
			text-decoration: none;
			font-family: $font-secondary;
			font-weight: 600;
			min-width: 16rem;
			min-height: 2rem;
			letter-spacing: .2rem;

			&:hover,
			&:focus {
				background-color: $bgcolor-hover;
				color: $fontcolor-hover;
				border-color: $bordercolor-hover;
			}
		}
	}
}

// ------------------------------
//  Mixin for themes
// ------------------------------
@mixin themes {
	// For each themes:
	@each $class-key-name, $color-of-keys-value in $themes {
		$bg-pagecolor: nth($color-of-keys-value, 1);
		$color-1stElement: nth($color-of-keys-value, 2);
		$color-2ndElement: nth($color-of-keys-value, 3);
		$color-3rdElement: nth($color-of-keys-value, 4);

		&__#{$class-key-name} {
			padding-top: 10%;
			height: 100%;
			background-color: $bg-pagecolor;

			//wave theme who depends of the theme
			.wave {
				&--back {
					@include waves(0, $color-1stElement);
				}
				&--front {
					@include waves(1, $color-2ndElement);
				}
			}

			// arrows indicator to scroll down
			@keyframes animate {
				0% {
					color: $bg-pagecolor;
					transform: translateY(0);
				}
				20% {
					color: $bg-pagecolor;
					transform: translateY(.5rem);
				}
				50% {
					color: $color-1stElement;
				}
				70% {
					color: $color-3rdElement;
					transform: translateY(1rem);	
				}
				100% {
					color: $bg-pagecolor;
					transform: translateY(0);
				}
			}

			.indicator {
				position: relative;
				display: flex;
				flex-wrap: wrap;
				flex-direction: column;
				justify-content: flex-end;
				align-content: center;
				height: 20%;
				top: 60%;

				span {
					animation: animate 2.3s linear infinite;
					position: absolute;
					color: $bg-pagecolor;
					z-index: 3;
					display: flex;
	
					&:nth-child(1){
						bottom: 2.3rem;
						animation-delay: 0s;
					}
					&:nth-child(2){
						bottom: 1rem;
						animation-delay: 0.2s;
					}
				}
			} 
		}
	}
}

// ------------------------------
//  Mixin for waves (in welcome.component, who depends of the theme)
// ------------------------------
@mixin waves ($waves_z-index, $path-color) {
	position: absolute;
	z-index: $waves_z-index;
	display: block;
	bottom: 0;
	path {
		fill: $path-color;
	}
}